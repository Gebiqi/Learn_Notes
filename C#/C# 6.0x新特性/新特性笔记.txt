01 自动化属性
不仅可以在声明时直接赋予默认值，还可以像之前的方式单独设置一个get只读属性

02StringFormat简化写法
新用法：在字符串前面添加“$”前缀，（变量可以直接写到{}内），并且有很强的智能提示

03表达式属性和表达式方法
表达式属性：只有一个get访问器的单行属性可以使用Lambda语法编写
表达式方法：只有一条语句的方法，可以使用Lambda语法编写

04 泛型集合Dictionary新初始化方法
使用新的简化方法为泛型赋值

05 static声明静态类的引用
静态类在使用时可以先引用后直接使用

06 nameof关键字的使用
当参数变化时，会在引用的地方同步变化，避免硬编码
nameof中可以是类名、方法名、属性名、参数名

07 Null条件表达式
var length = item?.Length;//如果为null则输出null
var length = item?.Length ?? 0;//如果为null则输出0;

补充：
在C#中??和?分别是什么意思？
1. 可空类型修饰符（？）：
引用类型可以使用空引用表示一个不存在的值，而值类型通常不能表示为空。
例如：string str=null; 是正确的，int i=null; 编译器就会报错。
为了使值类型也可为空，就可以使用可空类型，即用可空类型修饰符"？"来表示，表现形式为"T？"
例如：int? 表示可空的整形，DateTime? 表示可为空的时间。
T? 其实是System.Nullable(泛型结构）的缩写形式，也就意味着当你用到T？时编译器编译 时会把T？编译成System.Nullable的形式。
例如：int?,编译后便是System.Nullable的形式。

2. 三元（运算符）表达式（?:)：
例如：x?y:z 表示如果表达式x为true，则返回y；如果x为false，则返回z，是省略if{}else{}的简单形式。

3. 空合并运算符(??)：
用于定义可空类型和引用类型的默认值。如果此运算符的左操作数不为null，则此运算符将返回左操作数，否则返回右操作数。
例如：a??b 当a为null时则返回b，a不为null时则返回a本身。
空合并运算符为右结合运算符，即操作时从右向左进行组合的。如，“a??b??c”的形式按“a??(b??c)”计算。
好文要顶 关注我 收藏该文    