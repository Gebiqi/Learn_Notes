多线程

进程：一个程序就是一个进程，操作系统根据进程分配各种资源（内存...）
线程：操作系统为了提高效率会将一个进程分成多个线程，并按照线程来分配CPU执行时间
线程的特点：在具有多个CPU的计算机中，可以真正实现并行执行。（时间片概念）
Thread类：表示托管线程，每个Thread对象都代表一个托管线程，每个托管线程都对应一个执行方法

使用方法：
Thread objThread1 = new Thread(delegate(){});//参数是一个无参数委托对象
objThread1.IsBackground=true;
objThread1.Start();



多线程访问控件
在子线程中如果直接访问控件，会报错提示控件不是当前线程创建的，不能访问
微软有忽略这种异常的方法，但只是不提示报错，但现在不使用，无实践意义
先增加判断 .InvokeRequired 如果是true则表示控件不是当前线程创建
如果结果为true，需要使用控件的.invoke来实现跨线程访问可视化控件
invoke中参数是一个没有返回值的委托及给委托对象传递的参数
具体实现方式见Demo：ThreadAccessControls


总结：
线程初始化中的参数是线程执行的方法，可使用匿名方法或Lambda实现
可视化控件的invoke方法中的参数是没有返回值的委托对象以及参数
两者概念并不一样